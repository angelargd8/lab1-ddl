package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCircle = createDescriptorForCircle();
  /*package*/ final ConceptDescriptor myConceptColor = createDescriptorForColor();
  /*package*/ final ConceptDescriptor myConceptColorReference = createDescriptorForColorReference();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptSquare = createDescriptorForSquare();
  /*package*/ final ConceptDescriptor myConceptTriangle = createDescriptorForTriangle();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, "jetbrains.mps.execution.util");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCanvas, myConceptCircle, myConceptColor, myConceptColorReference, myConceptShape, myConceptSquare, myConceptTriangle);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Canvas:
        return myConceptCanvas;
      case LanguageConceptSwitch.Circle:
        return myConceptCircle;
      case LanguageConceptSwitch.Color:
        return myConceptColor;
      case LanguageConceptSwitch.ColorReference:
        return myConceptColorReference;
      case LanguageConceptSwitch.Shape:
        return myConceptShape;
      case LanguageConceptSwitch.Square:
        return myConceptSquare;
      case LanguageConceptSwitch.Triangle:
        return myConceptTriangle;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCanvas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Canvas", 0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c5344c50L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:eac7bf38-bac4-48ca-88d4-3294ea18d2aa(Shapes.structure)/7454517186966867024");
    b.version(3);
    b.aggregate("shapes", 0x6773c3e2c5344c53L).target(0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c5344c44L).optional(true).ordered(true).multiple(true).origin("7454517186966867027").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCircle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Circle", 0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c5344c46L);
    b.class_(false, false, false);
    // extends: Shapes.structure.Shape
    b.super_(0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c5344c44L);
    b.origin("r:eac7bf38-bac4-48ca-88d4-3294ea18d2aa(Shapes.structure)/7454517186966867014");
    b.version(3);
    b.property("x", 0x6773c3e2c5344c48L).type(PrimitiveTypeId.INTEGER).origin("7454517186966867016").done();
    b.property("y", 0x6773c3e2c5344c49L).type(PrimitiveTypeId.INTEGER).origin("7454517186966867017").done();
    b.property("radius", 0x6773c3e2c5344c4aL).type(PrimitiveTypeId.INTEGER).origin("7454517186966867018").done();
    b.alias("circle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Color", 0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c5366948L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:eac7bf38-bac4-48ca-88d4-3294ea18d2aa(Shapes.structure)/7454517186967005512");
    b.version(3);
    b.alias("color");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColorReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "ColorReference", 0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c53743dfL);
    b.class_(false, false, false);
    b.origin("r:eac7bf38-bac4-48ca-88d4-3294ea18d2aa(Shapes.structure)/7454517186967061471");
    b.version(3);
    b.associate("target", 0x6773c3e2c53743e0L).target(0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c5366948L).optional(false).origin("7454517186967061472").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Shape", 0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c5344c44L);
    b.class_(false, true, false);
    b.origin("r:eac7bf38-bac4-48ca-88d4-3294ea18d2aa(Shapes.structure)/7454517186966867012");
    b.version(3);
    b.aggregate("color", 0x6773c3e2c53743eeL).target(0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c53743dfL).optional(false).ordered(true).multiple(false).origin("7454517186967061486").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSquare() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Square", 0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c5344c4bL);
    b.class_(false, false, false);
    // extends: Shapes.structure.Shape
    b.super_(0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c5344c44L);
    b.origin("r:eac7bf38-bac4-48ca-88d4-3294ea18d2aa(Shapes.structure)/7454517186966867019");
    b.version(3);
    b.property("upperLeftX", 0x6773c3e2c5344c4cL).type(PrimitiveTypeId.INTEGER).origin("7454517186966867020").done();
    b.property("upperLeftY", 0x6773c3e2c5344c4dL).type(PrimitiveTypeId.INTEGER).origin("7454517186966867021").done();
    b.property("size", 0x6773c3e2c5344c4eL).type(PrimitiveTypeId.INTEGER).origin("7454517186966867022").done();
    b.alias("square");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTriangle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Triangle", 0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c53924a5L);
    b.class_(false, false, false);
    // extends: Shapes.structure.Shape
    b.super_(0xb0105c5f02f0460fL, 0xa27b731323c47f3fL, 0x6773c3e2c5344c44L);
    b.origin("r:eac7bf38-bac4-48ca-88d4-3294ea18d2aa(Shapes.structure)/7454517186967184549");
    b.version(3);
    b.property("side", 0x6773c3e2c53924a9L).type(PrimitiveTypeId.INTEGER).origin("7454517186967184553").done();
    b.property("angle", 0x6773c3e2c53924a7L).type(PrimitiveTypeId.INTEGER).origin("7454517186967184551").done();
    b.alias("triangle");
    return b.create();
  }
}
